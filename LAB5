* Creaci√≥n de una Lista a partir de POO

public class SinglyLinkedList {
    public static class Node{
        private String propiedad;
        private Node next;
        
        public Node(String e, Node n){
            this.propiedad=e;
            this.next=n;
        }
        
        private String getPropiedad(){
            return this.propiedad;
        }
        private void setPropiedad(String propiedad){
            this.propiedad= propiedad;
        }
        
        private Node getNext(){
            return this.next;
        }
        private void setNext(Node next){
            this.next= next;
        }
    }

        private Node head= null;
        private Node tail = null;
        private int size = 0;
        
        public int size(){return size;}
        public boolean isEmpty(){return size ==0;}
        public String first(){
            if (isEmpty()) return null;
            return head.getPropiedad();
        }
        public String last(){
            if (isEmpty()) return null;
            return tail.getPropiedad();
        }
        
        public void addFirst(String e){
            head = new Node(e, head);
            if (size ==0)
            tail = head;
            size++;
        }
        
        public void addLast(String e){
            Node newest = new Node(e,null);
            if(isEmpty())
            head = newest;
            else 
                tail.setNext(newest);
                tail = newest;
                size++;
        }
        public String removeFirst(){
            if (isEmpty()) return null;
            String res = head.getPropiedad();
            head = head.getNext();
            size--;
            if (size == 0)
            tail= null;
            return res;
        }
    
    
}

CLASE PANTALLA
public class HelloWorld {
    public static void main(String... argvs) {
        //String a = "Che";
        //System.out.println("Hello World " + a + "!");
       /* Node a = new Node();
        a.setPropiedad("GUAT");
        System.out.println(a.getPropiedad());
        Node b = new Node();
        b.setPropiedad("Mex");
        a.setNext(b);
        
        Node c= new Node();
        c.setPropiedad("USA");
        a.getNext().setNext(c);
        
        Node d= new Node();
        d.setPropiedad("ESP");
        a.getNext().getNext().setNext(d);
        
        System.out.println(a.getPropiedad());
        System.out.println(a.getNext().getPropiedad());
        System.out.println(a.getNext().getNext().getPropiedad());
        System.out.println(a.getNext().getNext().getNext().getPropiedad());
    
    }
    /**
     * *Inner class Node
     
    public static class Node{
        private String propiedad;
        private Node next;
        
        private String getPropiedad(){
            return this.propiedad;
        }
        private void setPropiedad(String propiedad){
            this.propiedad= propiedad;
        }
        
        private Node getNext(){
            return this.next;
        }
        private void setNext(Node next){
            this.next= next;
        }*/
       SinglyLinkedList lista = new SinglyLinkedList();
       
       lista.addFirst("GUA");
       lista.addLast("ARG");
       lista.addLast("BRA");
       lista.addFirst("PAN");
       


       System.out.println(lista.last());
 

      
    
    }
}
